{"version":3,"sources":["transitions/fade.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/Contact/Contact.module.css","components/Filter/Filter.module.css","components/Notification/Notification.module.css","transitions/slide.module.css","transitions/notification-transition.module.css","utilities/actionTypes.js","components/ContactForm/ContactForm.jsx","components/ContactList/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactListContainer.js","redux/actions.js","components/Filter/Filter.jsx","components/Filter/FilterContainer.js","components/Notification/Notification.jsx","components/App/App.jsx","utilities/utilities.js","components/App/AppContainer.js","components/ContactList/contactListReducer.js","components/Filter/filterReducer.js","components/Notification/notificationReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","ACTION_TYPES","LOAD_PREVIOUS_CONTACTS","SAVE_CONTACT","DELETE_CONTACT","TOGGLE_NOTIFICATION","CHANGE_FILTER","INITIAL_STATE","name","id","number","ContactForm","state","nameInputId","uuidv4","numberInputId","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onAddContact","this","contactForm","styles","submitButton","inputForm","onSubmit","className","htmlFor","type","onChange","disabled","isNaN","Component","Contact","onDelete","contact","onClick","deleteButton","ContactList","contacts","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","fadeTransition","unmountOnExit","connect","dispatch","data","payload","Filter","filterInputId","wrapper","input","placeholder","filter","Notification","notification","text","App","notificationIsOpen","toggleNotification","onSave","loadPreviousContacts","previousContacts","localStorage","getItem","useEffect","JSON","parse","filteredContacts","toLowerCase","includes","filterContacts","in","slideTransition","appear","notificationTransition","some","elem","setTimeout","length","actions","contactsReducer","action","setItem","stringify","updatedState","filterReducer","notificationReducer","combineReducers","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dcfb4d37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__9s3To\",\"enterActive\":\"fade_enterActive__q9D7O\",\"exit\":\"fade_exit__Lb-vJ\",\"exitActive\":\"fade_exitActive__2RpKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__OrlO3\",\"inputForm\":\"ContactForm_inputForm__2GJhT\",\"submitButton\":\"ContactForm_submitButton__1j4U7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteButton\":\"Contact_deleteButton__1NQcw\",\"contact\":\"Contact_contact__Maimy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__IqOjQ\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1C7Ma\",\"text\":\"Notification_text__3WvWm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__BLs75\",\"enterActive\":\"slide_enterActive__2XArv\",\"exit\":\"slide_exit__2XvOt\",\"exitActive\":\"slide_exitActive__3LNYO\",\"appear\":\"slide_appear__130o6\",\"appearDone\":\"slide_appearDone__2cK07\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"notification-transition_enter__13uF1\",\"enterActive\":\"notification-transition_enterActive__1Zyhl\",\"exit\":\"notification-transition_exit__H-NRp\",\"exitActive\":\"notification-transition_exitActive__1uGD_\"};","const ACTION_TYPES = {\n    LOAD_PREVIOUS_CONTACTS: 'LOAD_PREVIOUS_CONTACTS',\n    SAVE_CONTACT: 'SAVE_CONTACT',\n    DELETE_CONTACT: 'DELETE_CONTACT',\n    TOGGLE_NOTIFICATION: 'TOGGLE_NOTIFICATION',\n    CHANGE_FILTER: 'CHANGE_FILTER',\n  };\n  \n  export default ACTION_TYPES;\n  ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  id: '',\n  number: '',\n};\n\nexport default class ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n  };\n\n  state = {\n    ...INITIAL_STATE\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n      id: uuidv4(),\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onAddContact({ ...this.state });\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { contactForm, submitButton, inputForm } = styles;\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n        className={contactForm}\n      >\n        <label htmlFor={this.nameInputId}>Name</label>\n        <input\n          className={inputForm}\n          type=\"text\"\n          id={this.nameInputId}\n          name=\"name\"\n          onChange={this.handleChange}\n          value={name}\n        />\n        <label htmlFor={this.numberInputId}>Number</label>\n        <input\n          className={inputForm}\n          type=\"tel\"\n          id={this.numberInputId}\n          name=\"number\"\n          onChange={this.handleChange}\n          value={number}\n        />\n        <button\n          className={submitButton}\n          type=\"submit\"\n          disabled={!name || !number || isNaN(+number)}\n        >\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { deleteButton, contact } from './Contact.module.css';\n\nconst Contact = ({ name, number, onDelete }) => (\n  <li className={contact}>\n    <span>{name}</span>\n    <span>{number}</span>\n    <button type=\"button\" onClick={onDelete} className={deleteButton}>\n      &#10006;\n    </button>\n  </li>\n);\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport fadeTransition from '../../transitions/fade.module.css';\nimport Contact from './Contact/Contact';\n\n\nconst ContactList = ({ contacts, onDelete }) => (\n  <TransitionGroup component=\"ul\">\n    {contacts.map(({ name, id, number }) => (\n      <CSSTransition\n        key={id}\n        timeout={250}\n        classNames={fadeTransition}\n        unmountOnExit\n      >\n        <Contact\n          key={id}\n          name={name}\n          number={number}\n          onDelete={() => onDelete(id)}\n        />\n      </CSSTransition>\n    ))}\n  </TransitionGroup>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;","import * as actions from '../../redux/actions';\nimport { connect } from 'react-redux';\nimport ContactList from './ContactList';\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: data => dispatch(actions.deleteContact(data)),\n});\n\n\nexport default connect(null, mapDispatchToProps)(ContactList);\n","import ACTION_TYPES from '../utilities/actionTypes';\n\nexport const saveContact = (contact) => ({\n  type: ACTION_TYPES.SAVE_CONTACT,\n  payload: contact,\n});\n\nexport const deleteContact = (contact) => ({\n  type: ACTION_TYPES.DELETE_CONTACT,\n  payload: contact,\n});\n\nexport const toggleNotification = () => ({\n  type: ACTION_TYPES.TOGGLE_NOTIFICATION,\n});\n\nexport const loadPreviousContacts = (contacts) => ({\n  type: ACTION_TYPES.LOAD_PREVIOUS_CONTACTS,\n  payload: contacts,\n});\n\nexport const changeFilter = (string) => ({\n  type: ACTION_TYPES.CHANGE_FILTER,\n  payload: string,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { wrapper, input } from './Filter.module.css';\n\n\nconst Filter = ({ value, handleChange }) => {\n  const filterInputId = uuidv4();\n  return (\n    <div className={wrapper}>\n      <label htmlFor={filterInputId}>Find contacts by name</label>\n      <input\n        className={input}\n        type=\"text\"\n        id={filterInputId}\n        placeholder=\"Enter contact name...\"\n        value={value}\n        onChange={({ target: { value } }) => handleChange(value)}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;","import * as actions from '../../redux/actions';\nimport { connect } from 'react-redux';\nimport Filter from './Filter';\n\nconst mapStateToProps = state => ({\n  value: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleChange: data => dispatch(actions.changeFilter(data)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport { notification, text } from './Notification.module.css';\n\nconst Notification = () => (\n  <div className={notification}>\n    <p className={text}>Contact already exist!</p>\n  </div>\n);\n\nexport default Notification;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactListContainer';\nimport Filter from '../Filter/FilterContainer';\nimport Notification from '../Notification/Notification';\nimport { filterContacts } from '../../utilities/utilities';\nimport slideTransition from '../../transitions/slide.module.css';\nimport fadeTransition from '../../transitions/fade.module.css';\nimport notificationTransition from '../../transitions/notification-transition.module.css';\n\nconst App = ({\n  contacts,\n  filter,\n  notificationIsOpen,\n  toggleNotification,\n  onSave,\n  loadPreviousContacts,\n}) => {\n  const previousContacts = localStorage.getItem('contacts');\n\n  useEffect(() => {\n    if (previousContacts) {\n      loadPreviousContacts(JSON.parse(previousContacts));\n    }\n  }, [previousContacts]);\n\n  const addContact = contact => {\n    if (contacts.some(elem => elem.name === contact.name)) {\n      toggleNotification();\n      setTimeout(toggleNotification, 2500);\n      return;\n    }\n    onSave(contact);\n  };\n\n  const filteredContacts = filterContacts(contacts, filter);\n\n  return (\n    <>\n      <CSSTransition in timeout={500} classNames={slideTransition} appear>\n        <h1 className=\"title\">Phonebook</h1>\n      </CSSTransition>\n\n      <CSSTransition\n        in={notificationIsOpen}\n        timeout={250}\n        classNames={notificationTransition}\n        unmountOnExit\n      >\n        <Notification />\n      </CSSTransition>\n\n      <ContactForm onAddContact={addContact} />\n\n      <CSSTransition\n        in={contacts.length >= 2}\n        timeout={250}\n        classNames={fadeTransition}\n        unmountOnExit\n      >\n        <Filter />\n      </CSSTransition>\n\n      {!!contacts.length && <ContactList contacts={filteredContacts} />}\n    </>\n  );\n};\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  filter: PropTypes.string.isRequired,\n  notificationIsOpen: PropTypes.bool.isRequired,\n  toggleNotification: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n  loadPreviousContacts: PropTypes.func.isRequired,\n};\nexport default App;","export const filterContacts = (contacts, filter) => {\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n  ","import * as actions from '../../redux/actions';\nimport { connect } from 'react-redux';\nimport App from './App';\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts,\n  notificationIsOpen: state.notificationIsOpen,\n  filter: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: contact => dispatch(actions.saveContact(contact)),\n  toggleNotification: () => dispatch(actions.toggleNotification()),\n  loadPreviousContacts: contacts =>\n    dispatch(actions.loadPreviousContacts(contacts)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import ACTION_TYPES from '../../utilities/actionTypes';\n\nconst INITIAL_STATE = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst contactsReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.LOAD_PREVIOUS_CONTACTS:\n      return action.payload;\n\n    case ACTION_TYPES.SAVE_CONTACT:\n      localStorage.setItem(\n        'contacts',\n        JSON.stringify([...state, action.payload]),\n      );\n      return [...state, action.payload];\n\n    case ACTION_TYPES.DELETE_CONTACT:\n      const updatedState = state.filter(\n        contact => contact.id !== action.payload,\n      );\n      localStorage.setItem('contacts', JSON.stringify(updatedState));\n      return updatedState;\n\n    default:\n      return state;\n  }\n};\n\nexport default contactsReducer;\n","import ACTION_TYPES from '../../utilities/actionTypes';\n\nconst filterReducer = (state = '', action) => {\n  switch (action.type) {\n    case ACTION_TYPES.CHANGE_FILTER:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import ACTION_TYPES from '../../utilities/actionTypes';\n\nconst notificationReducer = (state = false, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.TOGGLE_NOTIFICATION:\n      return !state;\n\n    default:\n      return state;\n  }\n};\n\nexport default notificationReducer;\n","import { combineReducers } from 'redux';\nimport contactsReducer from '../components/ContactList/contactListReducer';\nimport filterReducer from '../components/Filter/filterReducer';\nimport notificationReducer from '../components/Notification/notificationReducer';\n\nexport default combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n  notificationIsOpen: notificationReducer,\n});\n","import { createStore } from 'redux';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './components/App/AppContainer';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}